services:
  # db:
  #   image: postgres:17
  #   environment:
  #     POSTGRES_USER: 'postgres'
  #     POSTGRES_PASSWORD: 'postgres'
  #   volumes:
  #     - db:/var/lib/postgresql/data
  postgresql_master:
    image: postgres:17
    container_name: master
    restart: always
    networks:
      - db-repl
    volumes:
      - ./db/data/master:/var/lib/postgresql/data
      - ./db/master/pg_hba.conf:/var/lib/postgresql/pg_hba.conf
      - ./db/master/init.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - ./.env.postgresql

  postgresql_slave:
    image: postgres:17
    container_name: slave
    restart: always
    networks:
      - db-repl
    volumes:
      - ./db/slave/.pgpass:/var/lib/postgresql/.pgpass
      - ./db/slave/.pgpass:/root/.pgpass
      - ./db/data/slave/:/var/lib/postgresql/data
      - ./db/master/pg_hba.conf:/var/lib/postgresql/pg_hba.conf
      - ./db/slave/init-slave.sh:/var/lib/postgresql/init-slave.sh
    env_file:
      - ./.env.postgresql

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2 # замените на последнюю версию
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - db-repl
    ports:
      - "9200:9200"
      - "9300:9300"

  kibana:
    image: docker.elastic.co/kibana/kibana:8.10.2 # замените на последнюю версию
    container_name: kibana
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - "5601:5601" # порт для Kibana
    networks:
      - db-repl
    depends_on:
      - elasticsearch

  web:
    tty: true
    stdin_open: true
    image: library
    container_name: library
    build:
      context: .
    env_file:
      ".env"
    command: >
      sh -c "rm -f tmp/pids/server.pid &&
             bundle exec rails s -p 3000 -b '0.0.0.0'"
    volumes:
      - .:/rails
      - "$DOCKER_COMPOSE_ARCHIVE_FOLDER:/rails/db/data"
    networks:
      - db-repl
    ports:
      - "8081:3000"
    depends_on:
      - postgresql_master
    environment:
      RAILS_LOG_TO_STDOUT: 'yes'
      PAGER: 'more'
      POSTGRES_HOST_MASTER: 'postgresql_master'
      POSTGRES_HOST_SLAVE: 'postgresql_slave'
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'

volumes:
  esdata: # Определение тома
    driver: local

networks:
  db-repl:
    driver: bridge
    name: db-repl
    ipam:
      driver: default
      config:
        - subnet: 172.22.0.0/16
          gateway: 172.22.0.1

# volumes:
#   db: